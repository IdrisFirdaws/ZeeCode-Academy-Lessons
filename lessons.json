{
  "frontend_roadmap": {
    "title": "Frontend Development Roadmap",
    "description": "A comprehensive guide to becoming a proficient frontend developer.",
    "lessons": [
      {
        "id": "fundamentals",
        "title": "1. Fundamentals of Web Development",
        "description": "Learn the core building blocks of web development.",
        "content": [
          "HTML: Learn the structure of web pages, semantic HTML, forms, tables, and accessibility.",
          "CSS: Master styling, layouts (Flexbox, Grid), animations, responsive design, and preprocessors like SASS or LESS.",
          "JavaScript: Understand the basics of programming, ES6+ features, DOM manipulation, event handling, and AJAX."
        ]
      },
      {
        "id": "version_control",
        "title": "2. Version Control",
        "description": "Learn to manage code changes and collaborate with others.",
        "content": [
          "Git: Learn version control basics, branching, merging, pull requests, and workflows (e.g., GitFlow).",
          "GitHub/GitLab/Bitbucket: Familiarize yourself with using these platforms for code hosting and collaboration."
        ]
      },
      {
        "id": "frameworks_libraries",
        "title": "3. Frontend Frameworks and Libraries",
        "description": "Understand the frameworks and libraries that enhance frontend development.",
        "content": [
          "CSS Frameworks: Bootstrap, Tailwind CSS, Material-UI.",
          "JavaScript Frameworks/Libraries: React, Vue.js, Angular.",
          "Learn component-based architecture, state management (e.g., Redux for React, Vuex for Vue.js), routing, and form handling."
        ]
      },
      {
        "id": "package_build_tools",
        "title": "4. Package Managers and Build Tools",
        "description": "Manage project dependencies and optimize your build process.",
        "content": [
          "Package Managers: npm, Yarn.",
          "Build Tools: Webpack, Parcel, Vite.",
          "Task Runners: Gulp, Grunt."
        ]
      },
      {
        "id": "advanced_js",
        "title": "5. Advanced JavaScript",
        "description": "Deepen your understanding of JavaScript and its ecosystem.",
        "content": [
          "Asynchronous Programming: Promises, async/await, fetch API.",
          "JavaScript Design Patterns: Module, Singleton, Observer, Factory.",
          "TypeScript: Learn the basics and advantages of using TypeScript over plain JavaScript."
        ]
      },
      {
        "id": "api_interaction",
        "title": "6. API Interaction",
        "description": "Learn to communicate with servers and fetch data.",
        "content": [
          "REST APIs: Understanding CRUD operations, status codes, headers, and JSON.",
          "GraphQL: Basics of GraphQL, queries, mutations, and using GraphQL clients like Apollo."
        ]
      },
      {
        "id": "testing",
        "title": "7. Testing",
        "description": "Ensure the quality and reliability of your code.",
        "content": [
          "Unit Testing: Frameworks like Jest, Mocha.",
          "Integration and End-to-End Testing: Cypress, Selenium, Puppeteer."
        ]
      },
      {
        "id": "performance_optimization",
        "title": "8. Performance Optimization",
        "description": "Improve the speed and responsiveness of your web applications.",
        "content": [
          "Web Performance: Lazy loading, code splitting, image optimization, and minimizing render-blocking resources.",
          "Web Vitals: Core Web Vitals, Lighthouse, PageSpeed Insights."
        ]
      },
      {
        "id": "accessibility",
        "title": "9. Accessibility (a11y)",
        "description": "Ensure your web applications are usable by everyone.",
        "content": [
          "Basics: ARIA roles, keyboard navigation, screen reader compatibility.",
          "Tools: Axe, WAVE, Lighthouse accessibility audit."
        ]
      },
      {
        "id": "security",
        "title": "10. Security",
        "description": "Protect your applications from common vulnerabilities.",
        "content": [
          "Common Vulnerabilities: XSS, CSRF, CORS.",
          "Best Practices: Content Security Policy, secure cookies, HTTPS."
        ]
      },
      {
        "id": "devops_deployment",
        "title": "11. DevOps and Deployment",
        "description": "Learn to deploy and maintain your applications.",
        "content": [
          "Hosting and CI/CD: Platforms like Netlify, Vercel, GitHub Actions.",
          "Containerization: Basics of Docker.",
          "Monitoring: Tools like Sentry for error tracking and performance monitoring."
        ]
      },
      {
        "id": "soft_skills",
        "title": "12. Soft Skills and Best Practices",
        "description": "Develop essential non-technical skills for effective collaboration.",
        "content": [
          "Communication: Working in teams, participating in code reviews.",
          "Project Management: Agile methodologies, using tools like Jira, Trello.",
          "Continuous Learning: Staying updated with the latest trends and best practices in the frontend ecosystem."
        ]
      },
      {
        "id": "portfolio_projects",
        "title": "13. Portfolio and Personal Projects",
        "description": "Build a portfolio and engage in projects to showcase your skills.",
        "content": [
          "Portfolio: Create a personal website showcasing your skills and projects.",
          "Open Source: Contribute to open source projects to gain experience and visibility.",
          "Blogging or Content Creation: Share your knowledge through blog posts, tutorials, or videos."
        ]
      }
    ]
  },
  
  "html": {
      "id": "html",
      "title": "HTML",
      "description": "Learn the basics and advanced concepts of HTML, the standard language for creating web pages.",
      "lessons": [
        {
          "id": "html_intro",
          "title": "Introduction",
          "description": "An overview of HTML and its role in web development.",
          "content": [
            "What is HTML?",
            "Basic structure of an HTML document"
          ]
        },
        {
          "id": "html_elements_tags",
          "title": "Elements and Tags",
          "description": "Understanding HTML elements and tags used to structure web content.",
          "content": [
            "Headings, paragraphs, lists",
            "Links, images, and media",
            "Forms and input types",
            "Semantic elements (e.g., <header>, <footer>, <article>, <section>)"
          ]
        },
        {
          "id": "html_attributes",
          "title": "Attributes",
          "description": "Learn about HTML attributes and how they modify the behavior of elements.",
          "content": [
            "Global attributes (id, class, style, etc.)",
            "Specific attributes for different elements"
          ]
        },
        {
          "id": "html_accessibility",
          "title": "Accessibility (a11y)",
          "description": "Making web content accessible to all users, including those with disabilities.",
          "content": [
            "Semantic HTML",
            "ARIA roles and attributes"
          ]
        },
        {
          "id": "html5_features",
          "title": "HTML5 Features",
          "description": "New features introduced in HTML5 to enhance web development.",
          "content": [
            "New elements (e.g., <video>, <audio>, <canvas>)",
            "Local storage, session storage",
            "Geolocation API"
          ]
        }
      ]
    },
    "css": {
      "id": "css",
      "title": "CSS",
      "description": "Learn the basics and advanced techniques of CSS for styling web pages.",
      "lessons": [
        {
          "id": "css_intro",
          "title": "Introduction to CSS",
          "description": "An overview of CSS and its role in styling web content.",
          "content": [
            "CSS syntax and structure",
            "Selectors and combinators",
            "Basic styling (color, background, border)"
          ]
        },
        {
          "id": "css_box_model",
          "title": "Box Model",
          "description": "Understanding the CSS box model and how it affects layout.",
          "content": [
            "Margin, border, padding, content",
            "Box-sizing property"
          ]
        },
        {
          "id": "css_layout",
          "title": "Layout",
          "description": "Techniques for creating layouts using CSS.",
          "content": [
            "Display property",
            "Positioning (static, relative, absolute, fixed, sticky)",
            "Flexbox",
            "Grid Layout"
          ]
        },
        {
          "id": "css_responsive_design",
          "title": "Responsive Design",
          "description": "Building responsive web pages that work across different devices.",
          "content": [
            "Media queries",
            "Responsive units (%, em, rem, vw, vh)",
            "Mobile-first design"
          ]
        },
        {
          "id": "css_preprocessors",
          "title": "CSS Preprocessors",
          "description": "Using preprocessors to enhance CSS with additional features.",
          "content": [
            "Introduction to SASS/LESS",
            "Variables, nesting, mixins, functions"
          ]
        },
        {
          "id": "css_animations_transitions",
          "title": "Animations and Transitions",
          "description": "Adding interactivity and motion to web pages using CSS.",
          "content": [
            "CSS transitions",
            "CSS animations (keyframes)"
          ]
        },
        {
          "id": "css_frameworks",
          "title": "CSS Frameworks",
          "description": "Using CSS frameworks to streamline styling and layout tasks.",
          "content": [
            "Overview of Bootstrap, Tailwind CSS, Material-UI",
            "Customizing frameworks"
          ]
        }
      ]
    }
  }
  